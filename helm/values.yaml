# Default values for aws-application-networking-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: 111815285043.dkr.ecr.ap-northeast-1.amazonaws.com/aws-gateway-controller
  tag: latest
  pullPolicy: Always
  pullSecrets: []

nameOverride: ""
fullnameOverride: ""

deployment:
  annotations:
    kubectl.kubernetes.io/default-container: manager
  labels:
    control-plane: gateway-api-controller
  containerPort: 8080
  # Which nodeSelector to set?
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  nodeSelector:
    kubernetes.io/os: linux
  # Which tolerations to set?
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # What affinity to set?
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  # Which priorityClassName to set?
  # See: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#pod-priority
  priorityClassName: ""
  # Number of replicas.
  replicas: 2
  topologySpreadConstraints: []

# If "installScope: cluster" then these labels will be applied to ClusterRole
role:
  labels: {}

metrics:
  service:
    # Set to true to automatically create a Kubernetes Service resource for the
    # Prometheus metrics server endpoint in controller
    create: false
    # Which Type to use for the Kubernetes Service?
    # See: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: "ClusterIP"

resources:
  requests:
    memory: "64Mi"
    cpu: "50m"
  limits:
    memory: "128Mi"
    cpu: "100m"

pdb:
  enabled: false
  minAvailable:
  maxUnavailable:

# log level for the controller
log:
  level: debug

# Set to "namespace" to install the controller in a namespaced scope, will only
# watch for object creation in the namespace. By default installScope is
# cluster wide.
installScope: cluster

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  annotations:
    {}
    # eks.amazonaws.com/role-arn: arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME

awsRegion: ap-northeast-1
awsAccountId: 111815285043
clusterVpcId: vpc-0e24bd68af2259678
clusterName: eks-auto-mode-sample
defaultServiceNetwork:
latticeEndpoint:
webhookEnabled: true
disableTaggingServiceApi: false
routeMaxConcurrentReconciles:

# TLS cert/key for the webhook. If specified, values must be base64 encoded
webhookTLS:
  caCert:
  cert:
  key:

